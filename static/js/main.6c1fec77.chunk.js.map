{"version":3,"sources":["Components/filter/Filter.module.css","Components/App.module.css","Redux/phonebook/phonebook-actions.js","Components/contactList/ContactList.js","Components/contatctForm/ContactForm.js","Components/filter/Filter.js","Components/App.js","Redux/phonebook/phonebook-reducers.js","Redux/store.js","index.js","Components/contatctForm/ContactForm.module.css","Components/contactList/ContactList.module.css"],"names":["module","exports","addNewContact","createAction","name","number","payload","id","uuidv4","getAllContacts","removeContact","findContact","mapDispatchToProps","connect","state","filtered","contacts","filter","contactsList","items","contact","toLowerCase","includes","onFindContact","map","className","s","contactListItem","contactListName","contactListNumber","contactListItemBtn","type","onClick","contatcs","useState","setName","setNumber","handleChange","e","target","value","isThereContact","some","contactForm","onSubmit","preventDefault","alert","contactFormName","contactFormNameInput","onChange","pattern","title","required","contactFormNumber","contactFormNumInput","contactFormBtn","filterInput","useEffect","newContacts","JSON","parse","localStorage","getItem","setItem","stringify","createReducer","action","_","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c1fec77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__DkH2v\",\"filterInput\":\"Filter_filterInput__2ErpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3UYWL\"};","// import { v4 as uuidv4 } from 'uuid';\r\n// import {\r\n//   ADD_CONTACT,\r\n//   GET_CONTACTS,\r\n//   REMOVE_CONTACT,\r\n//   FIND_CONTACT,\r\n// } from './phonebook-types';\r\n\r\n// export const addNewContact = (name, number) => {\r\n//   return {\r\n//     type: ADD_CONTACT,\r\n//     payload: { id: uuidv4(), name, number },\r\n//   };\r\n// };\r\n\r\n// export const getAllContacts = contacts => {\r\n//   return {\r\n//     type: GET_CONTACTS,\r\n//     payload: contacts,\r\n//   };\r\n// };\r\n\r\n// export const removeContact = id => {\r\n//   return {\r\n//     type: REMOVE_CONTACT,\r\n//     payload: id,\r\n//   };\r\n// };\r\n\r\n// export const findContact = value => ({\r\n//   type: FIND_CONTACT,\r\n//   payload: value,\r\n// });\r\n\r\n// ===================TOOLKIT==================================================================\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addNewContact = createAction(\r\n  'phonebook/addContact',\r\n  (name, number) => {\r\n    return {\r\n      payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n      },\r\n    };\r\n  },\r\n);\r\n\r\nexport const getAllContacts = createAction('phonebook/getContacts');\r\n\r\nexport const removeContact = createAction('phonebook/removeContact');\r\n\r\nexport const findContact = createAction('phonebook/findContact');\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { removeContact } from '../../Redux/phonebook/phonebook-actions';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ filtered, removeContact, contactsList }) => {\r\n  const onFindContact = (filtered, contactsList) => {\r\n    return contactsList.filter(contact =>\r\n      contact.name.toLowerCase().includes(filtered.toLowerCase()),\r\n    );\r\n  };\r\n  const findContact = onFindContact(filtered, contactsList);\r\n\r\n  return (\r\n    <ul>\r\n      {findContact &&\r\n        findContact.map(contact => {\r\n          return (\r\n            <li className={s.contactListItem} key={contact.id}>\r\n              <span className={s.contactListName}>{contact.name}:</span>\r\n              &nbsp;\r\n              <span className={s.contactListNumber}>{contact.number}</span>\r\n              <button\r\n                className={s.contactListItemBtn}\r\n                type=\"button\"\r\n                id={contact.id}\r\n                onClick={() => removeContact(contact.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filtered: state.contacts.filter,\r\n  contactsList: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  removeContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  filtered: PropTypes.string.isRequired,\r\n  removeContact: PropTypes.func.isRequired,\r\n  contactsList: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { addNewContact } from '../../Redux/phonebook/phonebook-actions';\r\n\r\nconst ContactForm = ({ contatcs, addNewContact }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    name === 'name' ? setName(value) : setNumber(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (isThereContact(name)) {\r\n      return alert(`${name} has been already in contact list`);\r\n    }\r\n    addNewContact(name, number);\r\n    reset();\r\n  };\r\n\r\n  const isThereContact = name =>\r\n    contatcs.some(contact => contact.name.toLowerCase() === name.toLowerCase());\r\n\r\n  return (\r\n    <form className={s.contactForm} onSubmit={handleSubmit}>\r\n      <label className={s.contactFormName}>\r\n        Name:\r\n        <input\r\n          className={s.contactFormNameInput}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={s.contactFormNumber}>\r\n        Number:\r\n        <input\r\n          className={s.contactFormNumInput}\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button className={s.contactFormBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contatcs: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addNewContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  addNewContact: PropTypes.func.isRequired,\r\n  contatcs: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { findContact } from '../../Redux/phonebook/phonebook-actions';\r\n\r\nconst Filter = ({ filter, findContact }) => {\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n\r\n    findContact(value);\r\n  };\r\n\r\n  return (\r\n    <label className={s.filter}>\r\n      Find contacts by name:\r\n      <input\r\n        className={s.filterInput}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={handleChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  findContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  findContact: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getAllContacts } from '../Redux/phonebook/phonebook-actions';\r\n\r\nimport ContactList from './contactList/ContactList';\r\nimport ContactForm from './contatctForm/ContactForm';\r\nimport Filter from './filter/Filter';\r\nimport s from '../Components/App.module.css';\r\n\r\nconst App = ({ contacts, getAllContacts }) => {\r\n  useEffect(() => {\r\n    const newContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    if (newContacts) {\r\n      getAllContacts(newContacts);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [getAllContacts]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n\r\n      <ContactForm />\r\n\r\n      <h2 className={s.title}>Contacts</h2>\r\n\r\n      <Filter />\r\n\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAllContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\nApp.propTypes = {\r\n  getAllContacts: PropTypes.func.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n","// import { combineReducers } from 'redux';\r\n\r\n// import {\r\n//   ADD_CONTACT,\r\n//   GET_CONTACTS,\r\n//   REMOVE_CONTACT,\r\n//   FIND_CONTACT,\r\n// } from './phonebook-types';\r\n\r\n// const items = (\r\n//   state = [],\r\n\r\n//   action,\r\n// ) => {\r\n//   switch (action.type) {\r\n//     case ADD_CONTACT:\r\n//       return [...state, action.payload];\r\n//     case GET_CONTACTS:\r\n//       return action.payload;\r\n//     case REMOVE_CONTACT:\r\n//       return state.filter(contact => contact.id !== action.payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', action) => {\r\n//   switch (action.type) {\r\n//     case FIND_CONTACT:\r\n//       return action.payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default combineReducers({\r\n//   items,\r\n//   filter,\r\n// });\r\n\r\n// ===================TOOLKIT==================================================================\r\n\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addNewContact,\r\n  getAllContacts,\r\n  removeContact,\r\n  findContact,\r\n} from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addNewContact]: (state, action) => [...state, action.payload],\r\n  [getAllContacts]: (state, action) => action.payload,\r\n  [removeContact]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [findContact]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import phonebookReducer from './phonebook/phonebook-reducers';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n\r\n// ===================TOOLKIT==============================\r\n\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport phonebookReducer from './phonebook/phonebook-reducers';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: phonebookReducer },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './Components/App';\nimport './index.css';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__29rHG\",\"contactFormName\":\"ContactForm_contactFormName__1Hz0N\",\"contactFormNameInput\":\"ContactForm_contactFormNameInput__QxYg9\",\"contactFormNumber\":\"ContactForm_contactFormNumber__2uc3m\",\"contactFormNumInput\":\"ContactForm_contactFormNumInput__1gYHq\",\"contactFormBtn\":\"ContactForm_contactFormBtn__26F3G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactList_contactListItem__3WBnR\",\"contactListName\":\"ContactList_contactListName__1jkmV\",\"contactListNumber\":\"ContactList_contactListNumber__1Ka7c\",\"contactListItemBtn\":\"ContactList_contactListItemBtn__24DVD\"};"],"sourceRoot":""}