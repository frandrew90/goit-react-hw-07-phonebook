{"version":3,"sources":["Components/filter/Filter.module.css","Components/App.module.css","Components/contatctForm/ContactForm.module.css","Redux/phonebook/phonebook-actions.js","Redux/phonebook/phonebook-operations.js","Redux/phonebook/phonebook-selectors.js","Components/contactList/ContactList.js","Components/contatctForm/ContactForm.js","Components/filter/Filter.js","Components/App.js","Redux/phonebook/phonebook-reducers.js","Redux/store.js","index.js","Components/contactList/ContactList.module.css"],"names":["module","exports","addContactReqest","createAction","addContactSuccess","addContactError","removeContactReqest","removeContactSuccess","removeContactError","getAllContactsReqest","getAllContactsSuccess","getAllContactsError","findContact","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","mapDispatchToProps","removeContact","id","dispatch","delete","then","catch","error","connect","filtered","contactsList","contact","name","toLowerCase","includes","onFindContact","map","className","s","contactListItem","contactListName","contactListNumber","number","contactListItemBtn","type","onClick","addNewContact","uuidv4","post","response","data","contatcs","useState","setName","setNumber","handleChange","e","target","value","isThereContact","some","contactForm","onSubmit","preventDefault","alert","contactFormName","contactFormNameInput","onChange","pattern","title","required","contactFormNumber","contactFormNumInput","contactFormBtn","filterInput","getAllContacts","get","useEffect","createReducer","action","payload","_","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08f6d35f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__DkH2v\",\"filterInput\":\"Filter_filterInput__2ErpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3UYWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__29rHG\",\"contactFormName\":\"ContactForm_contactFormName__1Hz0N\",\"contactFormNameInput\":\"ContactForm_contactFormNameInput__QxYg9\",\"contactFormNumber\":\"ContactForm_contactFormNumber__2uc3m\",\"contactFormNumInput\":\"ContactForm_contactFormNumInput__1gYHq\",\"contactFormBtn\":\"ContactForm_contactFormBtn__26F3G\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactReqest = createAction('phonebook/addContactRequest');\r\n\r\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\r\n\r\nexport const addContactError = createAction('phonebook/addContactError');\r\n\r\nexport const removeContactReqest = createAction(\r\n  'phonebook/removeContactReqest',\r\n);\r\n\r\nexport const removeContactSuccess = createAction(\r\n  'phonebook/removeContactSuccess',\r\n);\r\n\r\nexport const removeContactError = createAction('phonebook/removeContactError');\r\n\r\nexport const getAllContactsReqest = createAction('phonebook/getContactsReqest');\r\n\r\nexport const getAllContactsSuccess = createAction(\r\n  'phonebook/getContactsSuccess',\r\n);\r\n\r\nexport const getAllContactsError = createAction('phonebook/getContactsError');\r\n\r\nexport const findContact = createAction('phonebook/findContact');\r\n","import axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  addContactReqest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactReqest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  getAllContactsReqest,\r\n  getAllContactsSuccess,\r\n  getAllContactsError,\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const addNewContact = (name, number) => dispatch => {\r\n  const contact = { name, number, id: uuidv4() };\r\n\r\n  dispatch(addContactReqest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(response => dispatch(addContactSuccess(response.data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const removeContact = id => dispatch => {\r\n  dispatch(removeContactReqest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(removeContactSuccess(id)))\r\n    .catch(error => dispatch(removeContactError(error)));\r\n};\r\n\r\nexport const getAllContacts = () => dispatch => {\r\n  dispatch(getAllContactsReqest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(response => dispatch(getAllContactsSuccess(response.data)))\r\n    .catch(error => dispatch(getAllContactsError(error)));\r\n};\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { removeContact } from '../../Redux/phonebook/phonebook-operations';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport {\r\n  getContacts,\r\n  getFilter,\r\n} from '../../Redux/phonebook/phonebook-selectors';\r\n\r\nconst ContactList = ({ filtered, removeContact, contactsList }) => {\r\n  const onFindContact = (filtered, contactsList) => {\r\n    return contactsList.filter(contact =>\r\n      contact.name.toLowerCase().includes(filtered.toLowerCase()),\r\n    );\r\n  };\r\n  const findContact = onFindContact(filtered, contactsList);\r\n\r\n  return (\r\n    <ul>\r\n      {findContact &&\r\n        findContact.map(contact => {\r\n          return (\r\n            <li className={s.contactListItem} key={contact.id}>\r\n              <span className={s.contactListName}>{contact.name}:</span>\r\n              &nbsp;\r\n              <span className={s.contactListNumber}>{contact.number}</span>\r\n              <button\r\n                className={s.contactListItemBtn}\r\n                type=\"button\"\r\n                id={contact.id}\r\n                onClick={() => removeContact(contact.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filtered: getFilter(state),\r\n  contactsList: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  removeContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  filtered: PropTypes.string.isRequired,\r\n  removeContact: PropTypes.func.isRequired,\r\n  contactsList: PropTypes.array.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { addNewContact } from '../../Redux/phonebook/phonebook-operations';\r\nimport { getContacts } from '../../Redux/phonebook/phonebook-selectors';\r\n\r\nconst ContactForm = ({ contatcs, addNewContact }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    name === 'name' ? setName(value) : setNumber(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (isThereContact(name)) {\r\n      return alert(`${name} has been already in contact list`);\r\n    }\r\n    addNewContact(name, number);\r\n    reset();\r\n  };\r\n\r\n  const isThereContact = name =>\r\n    contatcs.some(contact => contact.name.toLowerCase() === name.toLowerCase());\r\n\r\n  return (\r\n    <form className={s.contactForm} onSubmit={handleSubmit}>\r\n      <label className={s.contactFormName}>\r\n        Name:\r\n        <input\r\n          className={s.contactFormNameInput}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={s.contactFormNumber}>\r\n        Number:\r\n        <input\r\n          className={s.contactFormNumInput}\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button className={s.contactFormBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contatcs: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addNewContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  addNewContact: PropTypes.func.isRequired,\r\n  contatcs: PropTypes.array.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { findContact } from '../../Redux/phonebook/phonebook-actions';\r\nimport { getFilter } from '../../Redux/phonebook/phonebook-selectors';\r\n\r\nconst Filter = ({ filter, findContact }) => {\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n\r\n    findContact(value);\r\n  };\r\n\r\n  return (\r\n    <label className={s.filter}>\r\n      Find contacts by name:\r\n      <input\r\n        className={s.filterInput}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={handleChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  findContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  findContact: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getAllContacts } from '../Redux/phonebook/phonebook-operations';\r\nimport { getContacts } from '../Redux/phonebook/phonebook-selectors';\r\nimport ContactList from './contactList/ContactList';\r\nimport ContactForm from './contatctForm/ContactForm';\r\nimport Filter from './filter/Filter';\r\nimport s from '../Components/App.module.css';\r\n\r\nconst App = ({ getAllContacts }) => {\r\n  useEffect(() => {\r\n    getAllContacts();\r\n\r\n    // eslint-disable-next-line\r\n  }, [getAllContacts]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n\r\n      <ContactForm />\r\n\r\n      <h2 className={s.title}>Contacts</h2>\r\n\r\n      <Filter />\r\n\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAllContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\nApp.propTypes = {\r\n  getAllContacts: PropTypes.func.isRequired,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  // addContactReqest,\r\n  addContactSuccess,\r\n  // addContactError,\r\n  // removeContactReqest,\r\n  removeContactSuccess,\r\n  // removeContactError,\r\n  // getAllContactsReqest,\r\n  getAllContactsSuccess,\r\n  // getAllContactsError,\r\n  findContact,\r\n} from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [getAllContactsSuccess]: (_, action) => action.payload,\r\n  [removeContactSuccess]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [findContact]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import phonebookReducer from './phonebook/phonebook-reducers';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n\r\n// ===================TOOLKIT==============================\r\n\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport phonebookReducer from './phonebook/phonebook-reducers';\r\n\r\n// const middleware = [...getDefaultMiddleware(), logger];\r\nconst middleware = [...getDefaultMiddleware()];\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: phonebookReducer },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './Components/App';\nimport './index.css';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactList_contactListItem__3WBnR\",\"contactListName\":\"ContactList_contactListName__1jkmV\",\"contactListNumber\":\"ContactList_contactListNumber__1Ka7c\",\"contactListItemBtn\":\"ContactList_contactListItemBtn__24DVD\"};"],"sourceRoot":""}